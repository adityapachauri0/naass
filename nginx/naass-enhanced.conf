# NAASS Enhanced Nginx Configuration with Caching and Security
# Place this file in /etc/nginx/sites-available/naass

# Upstream configuration for load balancing (if needed)
upstream naass_backend {
    server 127.0.0.1:5007 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream naass_frontend {
    server 127.0.0.1:3007 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=naass_general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=naass_api:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=naass_auth:10m rate=2r/s;

# Cache configuration
proxy_cache_path /var/cache/nginx/naass levels=1:2 keys_zone=naass_cache:10m max_size=100m inactive=60m use_temp_path=off;

# SSL Configuration (redirect HTTP to HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name naass.co.uk www.naass.co.uk;
    
    # Redirect all HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name naass.co.uk www.naass.co.uk;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/naass.co.uk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/naass.co.uk/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:;" always;
    
    # Logging
    access_log /var/log/nginx/naass_access.log combined;
    error_log /var/log/nginx/naass_error.log warn;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json application/x-font-ttf font/opentype image/svg+xml image/x-icon;
    gzip_comp_level 6;
    gzip_proxied any;
    
    # Client body size limit (for file uploads)
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # Timeout settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;
    
    # Frontend proxy with caching
    location / {
        # Rate limiting
        limit_req zone=naass_general burst=20 nodelay;
        
        proxy_pass http://naass_frontend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Caching for static content
        proxy_cache naass_cache;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 3;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        
        proxy_cache_bypass $http_upgrade;
    }
    
    # API endpoints with stricter rate limiting
    location /api {
        # Stricter rate limiting for API
        limit_req zone=naass_api burst=10 nodelay;
        
        # Special rate limit for auth endpoints
        location /api/auth {
            limit_req zone=naass_auth burst=5 nodelay;
            proxy_pass http://naass_backend;
            include /etc/nginx/proxy_params;
        }
        
        proxy_pass http://naass_backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable caching for API
        proxy_cache_bypass $http_upgrade;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # Static files with long cache
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot|pdf)$ {
        proxy_pass http://naass_frontend;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable caching
        proxy_cache naass_cache;
        proxy_cache_valid 200 30d;
        proxy_ignore_headers Cache-Control;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
    }
    
    # Health check endpoint (no rate limit)
    location /api/health {
        proxy_pass http://naass_backend;
        access_log off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /\.env {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common attack patterns
    location ~* (eval\(|base64_|shell_|exec\(|php_|\.asp|\.aspx|\.jsp|\.cgi) {
        return 403;
    }
}

# Optional: Server status monitoring (restrict access)
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}